import type { Anthropic } from '@anthropic-ai/sdk';
import * as fs from 'fs-extra';
import * as path from 'path';
import ProjectAnalyzer from './ProjectAnalyzer';

class SelfHealing {
  private readonly projectRoot: string;
  private readonly anthropic: Anthropic;
  private readonly analyzer: ProjectAnalyzer;

  constructor(projectRoot: string, anthropic: Anthropic) {
    this.projectRoot = projectRoot;
    this.anthropic = anthropic;
    this.analyzer = new ProjectAnalyzer(projectRoot, anthropic);
  }

  async heal(): Promise<void> {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –ª–µ—á–µ–Ω–∏—è');

    try {
      // 1. –ê–Ω–∞–ª–∏–∑ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      await this.analyzer.analyzeDependencies();

      // 2. –ê–Ω–∞–ª–∏–∑ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PostCSS
      await this.analyzer.analyzePostCSS();

      // 3. –ê–Ω–∞–ª–∏–∑ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞
      await this.analyzer.analyzeAndOptimizeCode();

      // 4. –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å–±–æ—Ä–∫–∏
      await this.analyzer.findAndFixBuildErrors();

      console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ:', error);
    }
  }
}

export default SelfHealing;
